// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `platon_mpc_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package net.platon.vm.slice.platon;

public enum ErrorEnum implements java.io.Serializable
{
    
    NoError(0),
    
    SystemError(100),
    
    ConnectionError(1001),
    
    UserPermissionError(1002),
    
    TaskNotFound(1005),
    
    NoParticipant(1006),
    
    SomeOneOffline(1007),
    
    SomeOneRejectTask(1008),
    
    TaskExecTimeout(1011),
    
    TaskInputInvalid(1012),
    
    TaskExecError(1013);

    public int
    value()
    {
        return __value;
    }

    public static ErrorEnum
    valueOf(int __v)
    {
        switch(__v)
        {
        case 0:
            return NoError;
        case 100:
            return SystemError;
        case 1001:
            return ConnectionError;
        case 1002:
            return UserPermissionError;
        case 1005:
            return TaskNotFound;
        case 1006:
            return NoParticipant;
        case 1007:
            return SomeOneOffline;
        case 1008:
            return SomeOneRejectTask;
        case 1011:
            return TaskExecTimeout;
        case 1012:
            return TaskInputInvalid;
        case 1013:
            return TaskExecError;
        }
        return null;
    }

    private
    ErrorEnum(int __v)
    {
        __value = __v;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeEnum(value(), 1013);
    }

    public static void
    __write(IceInternal.BasicStream __os, ErrorEnum __v)
    {
        if(__v == null)
        {
            __os.writeEnum(net.platon.vm.slice.platon.ErrorEnum.NoError.value(), 1013);
        }
        else
        {
            __os.writeEnum(__v.value(), 1013);
        }
    }

    public static ErrorEnum
    __read(IceInternal.BasicStream __is)
    {
        int __v = __is.readEnum(1013);
        return __validate(__v);
    }

    private static ErrorEnum
    __validate(int __v)
    {
        final ErrorEnum __e = valueOf(__v);
        if(__e == null)
        {
            throw new Ice.MarshalException("enumerator value " + __v + " is out of range");
        }
        return __e;
    }

    private final int __value;
}
