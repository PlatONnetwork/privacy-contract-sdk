// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `platon_mpc_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package net.platon.vm.slice.platon.service;

public class TaskParams implements java.lang.Cloneable, java.io.Serializable
{
    public String taskid;

    public String pubkey;

    public String txaddr;

    public String iraddr;

    public String method;

    public String extras;

    public String irhash;

    public net.platon.vm.slice.platon.MPCRole role;

    public TaskParams()
    {
        taskid = "";
        pubkey = "";
        txaddr = "";
        iraddr = "";
        method = "";
        extras = "";
        irhash = "";
        role = net.platon.vm.slice.platon.MPCRole.PART_ALICE;
    }

    public TaskParams(String taskid, String pubkey, String txaddr, String iraddr, String method, String extras, String irhash, net.platon.vm.slice.platon.MPCRole role)
    {
        this.taskid = taskid;
        this.pubkey = pubkey;
        this.txaddr = txaddr;
        this.iraddr = iraddr;
        this.method = method;
        this.extras = extras;
        this.irhash = irhash;
        this.role = role;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TaskParams _r = null;
        if(rhs instanceof TaskParams)
        {
            _r = (TaskParams)rhs;
        }

        if(_r != null)
        {
            if(taskid != _r.taskid)
            {
                if(taskid == null || _r.taskid == null || !taskid.equals(_r.taskid))
                {
                    return false;
                }
            }
            if(pubkey != _r.pubkey)
            {
                if(pubkey == null || _r.pubkey == null || !pubkey.equals(_r.pubkey))
                {
                    return false;
                }
            }
            if(txaddr != _r.txaddr)
            {
                if(txaddr == null || _r.txaddr == null || !txaddr.equals(_r.txaddr))
                {
                    return false;
                }
            }
            if(iraddr != _r.iraddr)
            {
                if(iraddr == null || _r.iraddr == null || !iraddr.equals(_r.iraddr))
                {
                    return false;
                }
            }
            if(method != _r.method)
            {
                if(method == null || _r.method == null || !method.equals(_r.method))
                {
                    return false;
                }
            }
            if(extras != _r.extras)
            {
                if(extras == null || _r.extras == null || !extras.equals(_r.extras))
                {
                    return false;
                }
            }
            if(irhash != _r.irhash)
            {
                if(irhash == null || _r.irhash == null || !irhash.equals(_r.irhash))
                {
                    return false;
                }
            }
            if(role != _r.role)
            {
                if(role == null || _r.role == null || !role.equals(_r.role))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::platon::service::TaskParams");
        __h = IceInternal.HashUtil.hashAdd(__h, taskid);
        __h = IceInternal.HashUtil.hashAdd(__h, pubkey);
        __h = IceInternal.HashUtil.hashAdd(__h, txaddr);
        __h = IceInternal.HashUtil.hashAdd(__h, iraddr);
        __h = IceInternal.HashUtil.hashAdd(__h, method);
        __h = IceInternal.HashUtil.hashAdd(__h, extras);
        __h = IceInternal.HashUtil.hashAdd(__h, irhash);
        __h = IceInternal.HashUtil.hashAdd(__h, role);
        return __h;
    }

    public TaskParams
    clone()
    {
        TaskParams c = null;
        try
        {
            c = (TaskParams)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(taskid);
        __os.writeString(pubkey);
        __os.writeString(txaddr);
        __os.writeString(iraddr);
        __os.writeString(method);
        __os.writeString(extras);
        __os.writeString(irhash);
        net.platon.vm.slice.platon.MPCRole.__write(__os, role);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        taskid = __is.readString();
        pubkey = __is.readString();
        txaddr = __is.readString();
        iraddr = __is.readString();
        method = __is.readString();
        extras = __is.readString();
        irhash = __is.readString();
        role = net.platon.vm.slice.platon.MPCRole.__read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, TaskParams __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TaskParams
    __read(IceInternal.BasicStream __is, TaskParams __v)
    {
        if(__v == null)
        {
             __v = new TaskParams();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TaskParams __nullMarshalValue = new TaskParams();

    public static final long serialVersionUID = 536260483L;
}
