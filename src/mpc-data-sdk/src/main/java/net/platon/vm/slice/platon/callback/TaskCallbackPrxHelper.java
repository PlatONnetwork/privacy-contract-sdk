// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `platon_mpc_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package net.platon.vm.slice.platon.callback;

/**
 * Provides type-specific helper functions.
 **/
public final class TaskCallbackPrxHelper extends Ice.ObjectPrxHelperBase implements TaskCallbackPrx
{
    private static final String __error_name = "error";

    public void error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error)
    {
        error(request, error, null, false);
    }

    public void error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, java.util.Map<String, String> __ctx)
    {
        error(request, error, __ctx, true);
    }

    private void error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_error(begin_error(request, error, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error)
    {
        return begin_error(request, error, null, false, false, null);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, java.util.Map<String, String> __ctx)
    {
        return begin_error(request, error, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, Ice.Callback __cb)
    {
        return begin_error(request, error, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_error(request, error, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, Callback_TaskCallback_error __cb)
    {
        return begin_error(request, error, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, net.platon.vm.slice.platon.ErrorEnum error, java.util.Map<String, String> __ctx, Callback_TaskCallback_error __cb)
    {
        return begin_error(request, error, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, 
                                       net.platon.vm.slice.platon.ErrorEnum error, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_error(request, error, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, 
                                       net.platon.vm.slice.platon.ErrorEnum error, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_error(request, error, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, 
                                       net.platon.vm.slice.platon.ErrorEnum error, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_error(request, error, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_error(MpcRequest request, 
                                       net.platon.vm.slice.platon.ErrorEnum error, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_error(request, error, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_error(MpcRequest request, 
                                        net.platon.vm.slice.platon.ErrorEnum error, 
                                        java.util.Map<String, String> __ctx, 
                                        boolean __explicitCtx, 
                                        boolean __synchronous, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_error(request, 
                           error, 
                           __ctx, 
                           __explicitCtx, 
                           __synchronous, 
                           new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_error(MpcRequest request, 
                                        net.platon.vm.slice.platon.ErrorEnum error, 
                                        java.util.Map<String, String> __ctx, 
                                        boolean __explicitCtx, 
                                        boolean __synchronous, 
                                        IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__error_name, __cb);
        try
        {
            __result.prepare(__error_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MpcRequest.__write(__os, request);
            net.platon.vm.slice.platon.ErrorEnum.__write(__os, error);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_error(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __error_name);
    }

    private static final String __inputData_name = "inputData";

    public net.platon.vm.slice.platon.ErrorEnum inputData(MpcRequest request, net.platon.vm.slice.platon.ByteListHolder data, net.platon.vm.slice.platon.ByteListHolder data_default)
    {
        return inputData(request, data, data_default, null, false);
    }

    public net.platon.vm.slice.platon.ErrorEnum inputData(MpcRequest request, net.platon.vm.slice.platon.ByteListHolder data, net.platon.vm.slice.platon.ByteListHolder data_default, java.util.Map<String, String> __ctx)
    {
        return inputData(request, data, data_default, __ctx, true);
    }

    private net.platon.vm.slice.platon.ErrorEnum inputData(MpcRequest request, net.platon.vm.slice.platon.ByteListHolder data, net.platon.vm.slice.platon.ByteListHolder data_default, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__inputData_name);
        return end_inputData(data, data_default, begin_inputData(request, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request)
    {
        return begin_inputData(request, null, false, false, null);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, java.util.Map<String, String> __ctx)
    {
        return begin_inputData(request, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, Ice.Callback __cb)
    {
        return begin_inputData(request, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_inputData(request, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, Callback_TaskCallback_inputData __cb)
    {
        return begin_inputData(request, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, java.util.Map<String, String> __ctx, Callback_TaskCallback_inputData __cb)
    {
        return begin_inputData(request, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, 
                                           FunctionalCallback_TaskCallback_inputData_Response __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_inputData(request, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, 
                                           FunctionalCallback_TaskCallback_inputData_Response __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_inputData(request, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, 
                                           java.util.Map<String, String> __ctx, 
                                           FunctionalCallback_TaskCallback_inputData_Response __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_inputData(request, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_inputData(MpcRequest request, 
                                           java.util.Map<String, String> __ctx, 
                                           FunctionalCallback_TaskCallback_inputData_Response __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_inputData(request, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_inputData(MpcRequest request, 
                                            java.util.Map<String, String> __ctx, 
                                            boolean __explicitCtx, 
                                            boolean __synchronous, 
                                            FunctionalCallback_TaskCallback_inputData_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        class CB extends IceInternal.Functional_TwowayCallback implements net.platon.vm.slice.platon.callback._Callback_TaskCallback_inputData
        {
            public CB(FunctionalCallback_TaskCallback_inputData_Response responseCb, 
                      IceInternal.Functional_GenericCallback1<Ice.Exception> exceptionCb, 
                      IceInternal.Functional_BoolCallback sentCb)
            {
                super(responseCb != null, exceptionCb, sentCb);
                __responseCb = responseCb;
            }

            public void response(net.platon.vm.slice.platon.ErrorEnum __ret, byte[] data, byte[] data_default)
            {
                if(__responseCb != null)
                {
                    __responseCb.apply(__ret, data, data_default);
                }
            }

            public final void __completed(Ice.AsyncResult __result)
            {
                TaskCallbackPrxHelper.__inputData_completed(this, __result);
            }

            private final FunctionalCallback_TaskCallback_inputData_Response __responseCb;
        }
        return begin_inputData(request, __ctx, __explicitCtx, __synchronous, new CB(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_inputData(MpcRequest request, 
                                            java.util.Map<String, String> __ctx, 
                                            boolean __explicitCtx, 
                                            boolean __synchronous, 
                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__inputData_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__inputData_name, __cb);
        try
        {
            __result.prepare(__inputData_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MpcRequest.__write(__os, request);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public net.platon.vm.slice.platon.ErrorEnum end_inputData(net.platon.vm.slice.platon.ByteListHolder data, net.platon.vm.slice.platon.ByteListHolder data_default, Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __inputData_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            data.value = net.platon.vm.slice.platon.ByteListHelper.read(__is);
            data_default.value = net.platon.vm.slice.platon.ByteListHelper.read(__is);
            net.platon.vm.slice.platon.ErrorEnum __ret;
            __ret = net.platon.vm.slice.platon.ErrorEnum.__read(__is);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __inputData_completed(net.platon.vm.slice.platon.callback._Callback_TaskCallback_inputData __cb, Ice.AsyncResult __result)
    {
        net.platon.vm.slice.platon.callback.TaskCallbackPrx __proxy = (net.platon.vm.slice.platon.callback.TaskCallbackPrx)__result.getProxy();
        net.platon.vm.slice.platon.ErrorEnum __ret = null;
        net.platon.vm.slice.platon.ByteListHolder data = new net.platon.vm.slice.platon.ByteListHolder();
        net.platon.vm.slice.platon.ByteListHolder data_default = new net.platon.vm.slice.platon.ByteListHolder();
        try
        {
            __ret = __proxy.end_inputData(data, data_default, __result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret, data.value, data_default.value);
    }

    private static final String __result_name = "result";

    public void result(MpcRequest request, byte[] data)
    {
        result(request, data, null, false);
    }

    public void result(MpcRequest request, byte[] data, java.util.Map<String, String> __ctx)
    {
        result(request, data, __ctx, true);
    }

    private void result(MpcRequest request, byte[] data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_result(begin_result(request, data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_result(MpcRequest request, byte[] data)
    {
        return begin_result(request, data, null, false, false, null);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, byte[] data, java.util.Map<String, String> __ctx)
    {
        return begin_result(request, data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, byte[] data, Ice.Callback __cb)
    {
        return begin_result(request, data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_result(request, data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, byte[] data, Callback_TaskCallback_result __cb)
    {
        return begin_result(request, data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, byte[] data, java.util.Map<String, String> __ctx, Callback_TaskCallback_result __cb)
    {
        return begin_result(request, data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, 
                                        byte[] data, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_result(request, data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, 
                                        byte[] data, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_result(request, data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, 
                                        byte[] data, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_result(request, data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_result(MpcRequest request, 
                                        byte[] data, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_result(request, data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_result(MpcRequest request, 
                                         byte[] data, 
                                         java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_result(request, 
                            data, 
                            __ctx, 
                            __explicitCtx, 
                            __synchronous, 
                            new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_result(MpcRequest request, 
                                         byte[] data, 
                                         java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__result_name, __cb);
        try
        {
            __result.prepare(__result_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MpcRequest.__write(__os, request);
            net.platon.vm.slice.platon.ByteListHelper.write(__os, data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_result(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __result_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskCallbackPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), TaskCallbackPrx.class, TaskCallbackPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskCallbackPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), TaskCallbackPrx.class, TaskCallbackPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskCallbackPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), TaskCallbackPrx.class, TaskCallbackPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskCallbackPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), TaskCallbackPrx.class, TaskCallbackPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static TaskCallbackPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, TaskCallbackPrx.class, TaskCallbackPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static TaskCallbackPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, TaskCallbackPrx.class, TaskCallbackPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::platon::callback::TaskCallback"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, TaskCallbackPrx v)
    {
        __os.writeProxy(v);
    }

    public static TaskCallbackPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            TaskCallbackPrxHelper result = new TaskCallbackPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
