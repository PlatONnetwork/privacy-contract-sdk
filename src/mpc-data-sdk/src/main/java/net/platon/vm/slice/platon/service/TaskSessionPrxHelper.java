// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `platon_mpc_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package net.platon.vm.slice.platon.service;

/**
 * Provides type-specific helper functions.
 **/
public final class TaskSessionPrxHelper extends Ice.ObjectPrxHelperBase implements TaskSessionPrx
{
    private static final String __registTransactionCallback_name = "registTransactionCallback";

    public net.platon.vm.slice.platon.ErrorEnum registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb)
    {
        return registTransactionCallback(user_address, cb, null, false);
    }

    public net.platon.vm.slice.platon.ErrorEnum registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, java.util.Map<String, String> __ctx)
    {
        return registTransactionCallback(user_address, cb, __ctx, true);
    }

    private net.platon.vm.slice.platon.ErrorEnum registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__registTransactionCallback_name);
        return end_registTransactionCallback(begin_registTransactionCallback(user_address, cb, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb)
    {
        return begin_registTransactionCallback(user_address, cb, null, false, false, null);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, java.util.Map<String, String> __ctx)
    {
        return begin_registTransactionCallback(user_address, cb, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, Ice.Callback __cb)
    {
        return begin_registTransactionCallback(user_address, cb, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_registTransactionCallback(user_address, cb, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, Callback_TaskSession_registTransactionCallback __cb)
    {
        return begin_registTransactionCallback(user_address, cb, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, java.util.Map<String, String> __ctx, Callback_TaskSession_registTransactionCallback __cb)
    {
        return begin_registTransactionCallback(user_address, cb, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, 
                                                           net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, 
                                                           IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_registTransactionCallback(user_address, cb, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, 
                                                           net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, 
                                                           IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_registTransactionCallback(user_address, cb, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, 
                                                           net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_registTransactionCallback(user_address, cb, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_registTransactionCallback(String user_address, 
                                                           net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_registTransactionCallback(user_address, cb, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_registTransactionCallback(String user_address, 
                                                            net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_registTransactionCallback(user_address, cb, __ctx, __explicitCtx, __synchronous, 
                                               new IceInternal.Functional_TwowayCallbackArg1<net.platon.vm.slice.platon.ErrorEnum>(__responseCb, __exceptionCb, __sentCb)
                                                   {
                                                       public final void __completed(Ice.AsyncResult __result)
                                                       {
                                                           TaskSessionPrxHelper.__registTransactionCallback_completed(this, __result);
                                                       }
                                                   });
    }

    private Ice.AsyncResult begin_registTransactionCallback(String user_address, 
                                                            net.platon.vm.slice.platon.callback.TransactionCallbackPrx cb, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__registTransactionCallback_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__registTransactionCallback_name, __cb);
        try
        {
            __result.prepare(__registTransactionCallback_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(user_address);
            net.platon.vm.slice.platon.callback.TransactionCallbackPrxHelper.__write(__os, cb);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public net.platon.vm.slice.platon.ErrorEnum end_registTransactionCallback(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __registTransactionCallback_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            net.platon.vm.slice.platon.ErrorEnum __ret;
            __ret = net.platon.vm.slice.platon.ErrorEnum.__read(__is);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __registTransactionCallback_completed(Ice.TwowayCallbackArg1<net.platon.vm.slice.platon.ErrorEnum> __cb, Ice.AsyncResult __result)
    {
        net.platon.vm.slice.platon.service.TaskSessionPrx __proxy = (net.platon.vm.slice.platon.service.TaskSessionPrx)__result.getProxy();
        net.platon.vm.slice.platon.ErrorEnum __ret = null;
        try
        {
            __ret = __proxy.end_registTransactionCallback(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __registerIR_name = "registerIR";

    public net.platon.vm.slice.platon.ErrorEnum registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb)
    {
        return registerIR(ir_hash, cb, null, false);
    }

    public net.platon.vm.slice.platon.ErrorEnum registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, java.util.Map<String, String> __ctx)
    {
        return registerIR(ir_hash, cb, __ctx, true);
    }

    private net.platon.vm.slice.platon.ErrorEnum registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__registerIR_name);
        return end_registerIR(begin_registerIR(ir_hash, cb, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb)
    {
        return begin_registerIR(ir_hash, cb, null, false, false, null);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, java.util.Map<String, String> __ctx)
    {
        return begin_registerIR(ir_hash, cb, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, Ice.Callback __cb)
    {
        return begin_registerIR(ir_hash, cb, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_registerIR(ir_hash, cb, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, Callback_TaskSession_registerIR __cb)
    {
        return begin_registerIR(ir_hash, cb, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, java.util.Map<String, String> __ctx, Callback_TaskSession_registerIR __cb)
    {
        return begin_registerIR(ir_hash, cb, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, 
                                            net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, 
                                            IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_registerIR(ir_hash, cb, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, 
                                            net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, 
                                            IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_registerIR(ir_hash, cb, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, 
                                            net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_registerIR(ir_hash, cb, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_registerIR(String ir_hash, 
                                            net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_registerIR(ir_hash, cb, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_registerIR(String ir_hash, 
                                             net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_GenericCallback1<net.platon.vm.slice.platon.ErrorEnum> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_registerIR(ir_hash, cb, __ctx, __explicitCtx, __synchronous, 
                                new IceInternal.Functional_TwowayCallbackArg1<net.platon.vm.slice.platon.ErrorEnum>(__responseCb, __exceptionCb, __sentCb)
                                    {
                                        public final void __completed(Ice.AsyncResult __result)
                                        {
                                            TaskSessionPrxHelper.__registerIR_completed(this, __result);
                                        }
                                    });
    }

    private Ice.AsyncResult begin_registerIR(String ir_hash, 
                                             net.platon.vm.slice.platon.callback.TaskCallbackPrx cb, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__registerIR_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__registerIR_name, __cb);
        try
        {
            __result.prepare(__registerIR_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(ir_hash);
            net.platon.vm.slice.platon.callback.TaskCallbackPrxHelper.__write(__os, cb);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public net.platon.vm.slice.platon.ErrorEnum end_registerIR(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __registerIR_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            net.platon.vm.slice.platon.ErrorEnum __ret;
            __ret = net.platon.vm.slice.platon.ErrorEnum.__read(__is);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __registerIR_completed(Ice.TwowayCallbackArg1<net.platon.vm.slice.platon.ErrorEnum> __cb, Ice.AsyncResult __result)
    {
        net.platon.vm.slice.platon.service.TaskSessionPrx __proxy = (net.platon.vm.slice.platon.service.TaskSessionPrx)__result.getProxy();
        net.platon.vm.slice.platon.ErrorEnum __ret = null;
        try
        {
            __ret = __proxy.end_registerIR(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskSessionPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), TaskSessionPrx.class, TaskSessionPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskSessionPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), TaskSessionPrx.class, TaskSessionPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskSessionPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), TaskSessionPrx.class, TaskSessionPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TaskSessionPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), TaskSessionPrx.class, TaskSessionPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static TaskSessionPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, TaskSessionPrx.class, TaskSessionPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static TaskSessionPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, TaskSessionPrx.class, TaskSessionPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::platon::service::TaskSession"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, TaskSessionPrx v)
    {
        __os.writeProxy(v);
    }

    public static TaskSessionPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            TaskSessionPrxHelper result = new TaskSessionPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
