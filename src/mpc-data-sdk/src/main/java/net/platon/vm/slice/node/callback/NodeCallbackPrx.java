// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `jugo_node_callback.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package net.platon.vm.slice.node.callback;

public interface NodeCallbackPrx extends Ice.ObjectPrx
{
    public boolean invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args);

    public boolean invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args);

    public Ice.AsyncResult begin_invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args, Ice.Callback __cb);

    public Ice.AsyncResult begin_invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args, Callback_NodeCallback_invite __cb);

    public Ice.AsyncResult begin_invite(String taskId, String starter, String algorithmId, int maxOfParticipants, String[] takers, String[] resultReceiverList, String[] args, java.util.Map<String, String> __ctx, Callback_NodeCallback_invite __cb);

    public Ice.AsyncResult begin_invite(String taskId, 
                                        String starter, 
                                        String algorithmId, 
                                        int maxOfParticipants, 
                                        String[] takers, 
                                        String[] resultReceiverList, 
                                        String[] args, 
                                        IceInternal.Functional_BoolCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_invite(String taskId, 
                                        String starter, 
                                        String algorithmId, 
                                        int maxOfParticipants, 
                                        String[] takers, 
                                        String[] resultReceiverList, 
                                        String[] args, 
                                        IceInternal.Functional_BoolCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_invite(String taskId, 
                                        String starter, 
                                        String algorithmId, 
                                        int maxOfParticipants, 
                                        String[] takers, 
                                        String[] resultReceiverList, 
                                        String[] args, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_BoolCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_invite(String taskId, 
                                        String starter, 
                                        String algorithmId, 
                                        int maxOfParticipants, 
                                        String[] takers, 
                                        String[] resultReceiverList, 
                                        String[] args, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_BoolCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_invite(Ice.AsyncResult __result);

    public void allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList);

    public void allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList);

    public Ice.AsyncResult begin_allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, Ice.Callback __cb);

    public Ice.AsyncResult begin_allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, Callback_NodeCallback_allReady __cb);

    public Ice.AsyncResult begin_allReady(String taskId, net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, java.util.Map<String, String> __ctx, Callback_NodeCallback_allReady __cb);

    public Ice.AsyncResult begin_allReady(String taskId, 
                                          net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_allReady(String taskId, 
                                          net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_allReady(String taskId, 
                                          net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_allReady(String taskId, 
                                          net.platon.vm.slice.common.NodeCommunicateInfo[] nodeCommunicateInfoList, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public void end_allReady(Ice.AsyncResult __result);

    public void error(String taskId, net.platon.vm.slice.common.ErrorEnum error);

    public void error(String taskId, net.platon.vm.slice.common.ErrorEnum error, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_error(String taskId, net.platon.vm.slice.common.ErrorEnum error);

    public Ice.AsyncResult begin_error(String taskId, net.platon.vm.slice.common.ErrorEnum error, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_error(String taskId, net.platon.vm.slice.common.ErrorEnum error, Ice.Callback __cb);

    public Ice.AsyncResult begin_error(String taskId, net.platon.vm.slice.common.ErrorEnum error, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_error(String taskId, net.platon.vm.slice.common.ErrorEnum error, Callback_NodeCallback_error __cb);

    public Ice.AsyncResult begin_error(String taskId, net.platon.vm.slice.common.ErrorEnum error, java.util.Map<String, String> __ctx, Callback_NodeCallback_error __cb);

    public Ice.AsyncResult begin_error(String taskId, 
                                       net.platon.vm.slice.common.ErrorEnum error, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_error(String taskId, 
                                       net.platon.vm.slice.common.ErrorEnum error, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_error(String taskId, 
                                       net.platon.vm.slice.common.ErrorEnum error, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_error(String taskId, 
                                       net.platon.vm.slice.common.ErrorEnum error, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    public void end_error(Ice.AsyncResult __result);

    public void inputData(String taskId, String fromUser, byte[] data);

    public void inputData(String taskId, String fromUser, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inputData(String taskId, String fromUser, byte[] data);

    public Ice.AsyncResult begin_inputData(String taskId, String fromUser, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inputData(String taskId, String fromUser, byte[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_inputData(String taskId, String fromUser, byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_inputData(String taskId, String fromUser, byte[] data, Callback_NodeCallback_inputData __cb);

    public Ice.AsyncResult begin_inputData(String taskId, String fromUser, byte[] data, java.util.Map<String, String> __ctx, Callback_NodeCallback_inputData __cb);

    public Ice.AsyncResult begin_inputData(String taskId, 
                                           String fromUser, 
                                           byte[] data, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_inputData(String taskId, 
                                           String fromUser, 
                                           byte[] data, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_inputData(String taskId, 
                                           String fromUser, 
                                           byte[] data, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_inputData(String taskId, 
                                           String fromUser, 
                                           byte[] data, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public void end_inputData(Ice.AsyncResult __result);

    public void result(String taskId, byte[] data);

    public void result(String taskId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_result(String taskId, byte[] data);

    public Ice.AsyncResult begin_result(String taskId, byte[] data, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_result(String taskId, byte[] data, Ice.Callback __cb);

    public Ice.AsyncResult begin_result(String taskId, byte[] data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_result(String taskId, byte[] data, Callback_NodeCallback_result __cb);

    public Ice.AsyncResult begin_result(String taskId, byte[] data, java.util.Map<String, String> __ctx, Callback_NodeCallback_result __cb);

    public Ice.AsyncResult begin_result(String taskId, 
                                        byte[] data, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_result(String taskId, 
                                        byte[] data, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_result(String taskId, 
                                        byte[] data, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_result(String taskId, 
                                        byte[] data, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public void end_result(Ice.AsyncResult __result);
}
