// **********************************************************************
//
// Copyright (c) 2003-2018 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `platon_mpc_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package net.platon.vm.slice.platon.callback;

public interface NodeCallbackPrx extends Ice.ObjectPrx
{
    public void invite(String taskid, int status);

    public void invite(String taskid, int status, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_invite(String taskid, int status);

    public Ice.AsyncResult begin_invite(String taskid, int status, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_invite(String taskid, int status, Ice.Callback __cb);

    public Ice.AsyncResult begin_invite(String taskid, int status, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_invite(String taskid, int status, Callback_NodeCallback_invite __cb);

    public Ice.AsyncResult begin_invite(String taskid, int status, java.util.Map<String, String> __ctx, Callback_NodeCallback_invite __cb);

    public Ice.AsyncResult begin_invite(String taskid, 
                                        int status, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_invite(String taskid, 
                                        int status, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_invite(String taskid, 
                                        int status, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_invite(String taskid, 
                                        int status, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public void end_invite(Ice.AsyncResult __result);

    public void _notify(String taskid, int status);

    public void _notify(String taskid, int status, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_notify(String taskid, int status);

    public Ice.AsyncResult begin_notify(String taskid, int status, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_notify(String taskid, int status, Ice.Callback __cb);

    public Ice.AsyncResult begin_notify(String taskid, int status, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_notify(String taskid, int status, Callback_NodeCallback_notify __cb);

    public Ice.AsyncResult begin_notify(String taskid, int status, java.util.Map<String, String> __ctx, Callback_NodeCallback_notify __cb);

    public Ice.AsyncResult begin_notify(String taskid, 
                                        int status, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_notify(String taskid, 
                                        int status, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_notify(String taskid, 
                                        int status, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_notify(String taskid, 
                                        int status, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public void end_notify(Ice.AsyncResult __result);

    public void ready(String taskid, int status);

    public void ready(String taskid, int status, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ready(String taskid, int status);

    public Ice.AsyncResult begin_ready(String taskid, int status, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ready(String taskid, int status, Ice.Callback __cb);

    public Ice.AsyncResult begin_ready(String taskid, int status, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_ready(String taskid, int status, Callback_NodeCallback_ready __cb);

    public Ice.AsyncResult begin_ready(String taskid, int status, java.util.Map<String, String> __ctx, Callback_NodeCallback_ready __cb);

    public Ice.AsyncResult begin_ready(String taskid, 
                                       int status, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_ready(String taskid, 
                                       int status, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_ready(String taskid, 
                                       int status, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_ready(String taskid, 
                                       int status, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_VoidCallback __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    public void end_ready(Ice.AsyncResult __result);
}
